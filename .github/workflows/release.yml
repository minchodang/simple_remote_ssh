name: Release

on:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false

permissions:
    contents: write
    pull-requests: write
    packages: write

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js 18
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  registry-url: 'https://registry.npmjs.org'

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 9

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build packages
              run: pnpm build

            - name: Setup NPM authentication
              run: |
                  echo "Checking NPM_TOKEN..."
                  if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
                    echo "❌ NPM_TOKEN is empty or not set!"
                    exit 1
                  else
                    echo "✅ NPM_TOKEN is set"
                  fi
                  echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
                  echo "Created ~/.npmrc file"
                  ls -la ~/.npmrc
                  echo "Testing npm authentication..."
                  npm whoami || echo "npm whoami failed"

            - name: Create Release Pull Request or Publish to npm
              id: changesets
              uses: changesets/action@v1
              with:
                  # This command creates a PR if changesets exist, otherwise publishes to npm
                  publish: pnpm release
                  title: 'chore: release packages'
                  commit: 'chore: release packages'
                  createGithubReleases: true
                  setupGitUser: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create GitHub Release
              if: steps.changesets.outputs.published == 'true'
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
                  release_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
                  body: |
                      ## 🎉 New release deployed!

                      ### 📦 Published packages
                      ${{ steps.changesets.outputs.publishedPackages }}

                      ### 🚀 Installation
                      ```bash
                      npm install -g simple-remote-ssh
                      ```
                  draft: false
                  prerelease: false
